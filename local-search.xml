<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【小迪安全】加密算法（六）</title>
    <link href="/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <url>/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%EF%BC%88%E5%85%AD%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>【小迪安全】加密算法（六）</strong></p><p>常见加密编码等算法解析：MD5、SHA、AES(加密方式：CBC，偏移量、密码key、输出方式为base64和Hex)、Base64、时间戳、进制转换、Unescape。</p><p>MD5：有不可逆型md5，也有16位不可逆md5，多种组合式md5；破解的方法是枚举法，常见的有在线网站：cmd5就是一个md5值库，通过大量的md5进行比对来找出对应md5值的明文。</p><p>Base64：加密字符包括0-9，a-z，A-Z，最后通常会有&#x3D;&#x3D;作为结尾。</p><p>常见加密方式解析：带salt的MD5加密、不同偏移量和密码组合的AES。案例：不同网站的数据库可能会采用不同的加密方式来对用户的口令进行加密，在获取数据库权限时就可以试着破解。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【小迪安全】信息搜集—架构、塔建、WAF等（八）</title>
    <link href="/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94%E6%9E%B6%E6%9E%84%E3%80%81%E5%A1%94%E5%BB%BA%E3%80%81WAF%E7%AD%89%EF%BC%88%E5%85%AB%EF%BC%89/"/>
    <url>/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94%E6%9E%B6%E6%9E%84%E3%80%81%E5%A1%94%E5%BB%BA%E3%80%81WAF%E7%AD%89%EF%BC%88%E5%85%AB%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>【小迪安全】信息搜集—架构、塔建、WAF等（八）</p><p>知识汇总：（之前要先判断有无CDN，运用第七天CDN绕过知识）有WEB无CDN——关于程序源码（内部&#x2F;未知CMS、开源CMS）、其他（操作系统、塔建平台、数据库类型）、站点塔建（目录站点、端口站点、子域名站点、旁注&#x2F;C段站点、类似域名站点）、防护应用WAF（安全狗{老牌防护软件}、宝塔{自带的防护软件，更偏向于网站搭建这块}、云盾、安骑士）。</p><ul><li><p>CMS识别技术</p></li><li><p>源码获取技术</p></li><li><p>架构信息获取</p></li><li><p>站点搭建分析</p><p>搭建习惯-目录型站点：不同网站有不同目录，不同目录下可能有不同的程序。</p><p>搭建习惯-端口类站点：常规的网站是80端口（也就是HTTP）</p><p>搭建习惯-子域名站点：子域名两套CMS，案例：<a href="http://bbs.goodlift.net/%EF%BC%8C%E6%90%9C%E7%B4%A2%E8%AF%AD%E6%B3%95inurl%E3%80%81site">http://bbs.goodlift.net/，搜索语法inurl、site</a></p><p>搭建习惯-类似域名站点：网站后缀.com .net .cn .xyz </p><p>搭建习惯-旁注，C段站点：旁注：同服务器不同站点，C段不同服务器不同站点。</p><p>搭建习惯-搭建软件特征站点：判断是不是塔建软件搭建的网站还是自己搭建网站的方法：抓包观察sever是不是把信息写全，通常来说信息写的越全的网站一般都是使用搭建软件搭建的。</p></li><li><p>WAF防护分析：</p><p>什么是WAF应用？</p><p>如何快速识别WAF？</p><p>识别WAF对于安全测试的意义？</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【小迪安全】信息收集——CDN相关技术(七)</title>
    <link href="/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94%E2%80%94CDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF%EF%BC%88%E4%B8%83%EF%BC%89/"/>
    <url>/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94%E2%80%94CDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF%EF%BC%88%E4%B8%83%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>【小迪安全】信息收集——CDN相关技术</strong></p><p>CDN的概念：CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户<strong>就近</strong>获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。存在CDN技术会对我们的安全测试造成很大的影响。</p><p>常见的CDN绕过技术有哪些？</p><p>子域名查询：不同的域名可以设置的</p><p><a href="http://www.baidu.com、baidu.com/">www.baidu.com、baidu.com</a></p><p><a href="http://www.xiaodi8.com、xiaodi8.com/">www.xiaodi8.com、xiaodi8.com</a></p><p><a href="http://www.xueersi.com、xueersi.com/">www.xueersi.com、xueersi.com</a></p><p>邮件服务查询：邮箱服务器大部分不做CDN，因为邮箱大部分都是内部人访问。这里有一个正向访问和反向访问的区别：正向访问就是我们主动访问该网站，所以服务器就近分配一个IP给我们；方向访问是目标网站发送一个邮件，这时它的IP地址是邮件服务器的IP地址。所以可以根据对方邮件的邮件服务器IP地址来进行测试。（第三方接口扫描不是很靠谱，只有通过人工查询和反复判断才能真正得到真实IP，最后可以通过修改本地的hosts文件来验证是不是真实IP）</p><p>国外地址请求：外国很少访问国内的网站，国外的CDN一般来说不会设置，因为这是从成本角度来考虑的。所以我们可以开个VPN去访问该网站，很有可能获取到该网站的真实IP。</p><p>遗留文件，扫描全网：shodan搜索某网站的遗留文件。</p><p>黑暗引擎搜索特定文件：zoomeye、shodan、fofa、google hacking。案例：shodan搜索网站图片的hash值。</p><p>dns历史记录，以量打量：dns历史记录查询没有设置cdn的时期的真实ip地址。以量打量：ddos（拒绝服务攻击），打光该网站的CDN流量，之后就是真实的IP地址。</p><p>扫描工具：Fuckcdn、w8fuckcdn</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【小迪安全】信息收集—APP及其他资产（九）</title>
    <link href="/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94APP%E7%AD%89%E8%B5%84%E4%BA%A7%E4%BF%A1%E6%81%AF%EF%BC%88%E4%B9%9D%EF%BC%89/"/>
    <url>/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94APP%E7%AD%89%E8%B5%84%E4%BA%A7%E4%BF%A1%E6%81%AF%EF%BC%88%E4%B9%9D%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>【小迪安全】信息收集—APP及其他资产（九）</p><p><strong>这一节是信息收集最重要的一课</strong></p><p>知识要点：</p><p>通过APP获取信息：</p><p>方法：工具反编译获取URL信息或者通过抓包分析数据包。</p><p>APK 一键提取反编译；利用 burp 历史抓更多 URL</p><p><strong>某IP无WEB框架下的测试</strong></p><p>各种端口一顿乱扫-思路 工具：nmap、zoomeye、fofa、shodan</p><p>各种接口一顿乱扫-思路 工具：chinaz、shodan、fofa、zoomeye</p><p>接口部分一顿测试-思路</p><p>案例：某传销网站的信息收集。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【小迪安全】信息收集—资产监控拓展（十）</title>
    <link href="/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94%E8%B5%84%E4%BA%A7%E7%9B%91%E6%8E%A7%E6%8B%93%E5%B1%95%EF%BC%88%E5%8D%81%EF%BC%89/"/>
    <url>/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E2%80%94%E8%B5%84%E4%BA%A7%E7%9B%91%E6%8E%A7%E6%8B%93%E5%B1%95%EF%BC%88%E5%8D%81%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>【小迪安全】信息收集—资产监控拓展（十）</p><p>Github监控结合sever酱微信推送：便于收集最新漏洞信息便于利用。（python脚本）</p><p>各种子域名查询：layer、teemo</p><p>黑暗引擎相关搜索：fofa、shodan、zoomeye</p><p>内部群内部应用内部接口：物理黑客，属于社会工程攻击。</p><p>ip查询工具：</p><p><a href="http://www.ipip.net/">http://www.ipip.net/</a></p><p><a href="https://crt.sh/">https://crt.sh/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【小迪安全】WEB漏洞-必懂知识点（十一）</title>
    <link href="/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91WEB%E6%BC%8F%E6%B4%9E-%E5%BF%85%E6%87%82%E7%9F%A5%E8%AF%86%E7%82%B9%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/"/>
    <url>/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91WEB%E6%BC%8F%E6%B4%9E-%E5%BF%85%E6%87%82%E7%9F%A5%E8%AF%86%E7%82%B9%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>【小迪安全】WEB漏洞-必懂知识点（十一）</strong></p><ul><li>WEB漏洞汇总</li></ul><p>​<strong>CSRF:*<em><strong>跨站请求伪造</strong>（英语：Cross-site request forgery），也被称为 <strong>one-click attack</strong> 或者 <strong>session riding</strong>，通常缩写为 <strong>CSRF</strong> 或者 <strong>XSRF</strong>， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，</em>*XSS</strong> 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p><p>​**SSRF:**SSRF(service side request forgery) 为服务器请求伪造，是一种右攻击者形成服务器端发起的安全漏洞。</p><p>​<strong>目录遍历：</strong>属于一个低危漏洞，具有该漏洞的网站，可以通过windows或者linux下的..&#x2F;遍历网站目录。发现这个漏洞要配合其他的漏洞来继续深入的渗透，比如文件上传漏洞，上传webshell，获取网站权限。</p><p>**文件读取：**如何说目录遍历漏洞是可以看到这个网站目录的所有文件结构而无法读取指定文件获取文件内的信息，那么文件读取漏洞就是针对某个指定文件而获取文件内容信息的漏洞。往往目录遍历漏洞会配合着文件读取漏洞进行，从而获取到重要的文件（网站的数据库配置文件）。</p><p>**文件下载：**通过网站的下载链接的设计漏洞访问下载目标网站中其他目录的文件。</p><p>​<strong>命令执行：</strong></p><p><strong>XXE安全：</strong></p><p>​<strong>其他补充：</strong></p><ul><li>重要漏洞</li></ul><p>​<strong>SQL注入(高危)：</strong>通过测试网站上的注入点获取。SQL注入即是指<a href="https://baike.baidu.com/item/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/2498090?fromModule=lemma_inlink">web应用程序</a>对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的<a href="https://baike.baidu.com/item/SQL%E8%AF%AD%E5%8F%A5/5714895?fromModule=lemma_inlink">SQL语句</a>，在管理员不知情的情况下实现非法操作，以此来实现欺骗<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1%E5%99%A8/613818?fromModule=lemma_inlink">数据库服务器</a>执行非授权的任意查询，从而进一步得到相应的数据信息。</p><p>**文件上传(高危)：**文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。这种攻击方式是最为直接和有效的，“文件上传” 本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。这种漏洞一旦存在就会给网站的安全带了巨大的损害，因为攻击者往往会通过漏洞点上传后门文件，远程控制获取服务器权限。</p><p>**XXS跨站：**XSS攻击通常指的是通过利用<a href="https://baike.baidu.com/item/%E7%BD%91%E9%A1%B5/99347?fromModule=lemma_inlink">网页</a>开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括<a href="https://baike.baidu.com/item/Java/85979?fromModule=lemma_inlink">Java</a>、 <a href="https://baike.baidu.com/item/VBScript/473081?fromModule=lemma_inlink">VBScript</a>、<a href="https://baike.baidu.com/item/ActiveX/529325?fromModule=lemma_inlink">ActiveX</a>、 Flash 或者甚至是普通的HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。</p><p>​<strong>文件包含：</strong>文件包含就是为了将写好的代码功能更好的重复使用，用文件包含函数，将写好的功能代码直接引入到另一个代码页中，这样另一个代码页就不需要在写一遍重复的功能性代码。</p><p>​<strong>反序列化：</strong></p><p>序列化：把对象转换为字节序列的过程，即把对象转换为可以存储或传输的数据的过程。例如将内存中的对象转换为二进制数据流或文件，在网络传输过程中，可以是字节或是XML等格式。</p><p><strong>反序列化</strong>：把字节序列恢复为对象的过程，即把可以存储或传输的数据转换为对象的过程。例如将二进制数据流或文件加载到内存中还原为对象。</p><p>​<strong>代码执行(高危)：</strong></p><p>​<strong>逻辑安全：</strong></p><p>​<strong>未授权访问：</strong></p><p>案例：</p><p>SQL注入（简单）：联合查询</p><p>目录遍历：127.0.0.1&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</p><p>文件上传</p><p><a href="http://14.205.40.175/app.znds.com/down/20220930/dbk22gyy_1.9.1.2_dangbei.apk">http://14.205.40.175/app.znds.com/down/20220930/dbk22gyy_1.9.1.2_dangbei.apk</a></p><p><a href="http://down.znds.com/getdownurl/?s=L2Rvd24vMjAyMjA5MzAvZGJrMjJneXlfMS45LjEuMl9kYW5nYmVpLmFwaw==">http://down.znds.com/getdownurl/?s=L2Rvd24vMjAyMjA5MzAvZGJrMjJneXlfMS45LjEuMl9kYW5nYmVpLmFwaw==</a></p><p>L2Rvd24vMjAyMjA5MzAvZGJrMjJneXlfMS45LjEuMl9kYW5nYmVpLmFwaw&#x3D;&#x3D; 使用base64解密后得到：&#x2F;down&#x2F;20220930&#x2F;dbk22gyy_1.9.1.2_dangbei.apk</p><p><a href="http://down.znds.com/getdownurl/?s=">http://down.znds.com/getdownurl/?s=</a></p><p><a href="http://14.205.40.175/app.znds.com/down/20220930/ynjybb_2.8.4_dangbei.apk">http://14.205.40.175/app.znds.com/down/20220930/ynjybb_2.8.4_dangbei.apk</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【小迪安全】系统及数据库（五）</title>
    <link href="/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <url>/2022/10/10/%E3%80%90%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%E3%80%91%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E4%BA%94%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p><strong>【小迪安全】系统及数据库（五）</strong></p><p>知识汇总</p><ul><li>操作系统：windows、linux </li><li>WEB：网站源码（内部或未知、CMS、框架或非框架）</li><li>APP：android、IOS</li><li>第三方：openssh、webblogic、jboss</li></ul><p>如何从网站判断其操作系统类型？</p><p>方法一：在URL位置修改大小写字母，观察网站是否还能正常运行。若能正常运行，则表明该网站的操作系统是windows；若网站不能正常运行，则说明该网站的操作系统是linux。原因是windows系统下对大小写不敏感，而linux系统对大小写敏感。</p><p>方法二：Nmap探测目标操作系统。命令：nmap -O <IP></p><p>方法三：根据ping命令的TTL值判断。</p><p>1、WINDOWS NT&#x2F;2000   TTL：128<br>2、WINDOWS 95&#x2F;98     TTL：32<br>3、UNIX              TTL：255<br>4、LINUX             TTL：64<br>5、WIN7          TTL：64<br>案例：CVE-2017-17010</p><p>如何识别数据库类型？</p><p>方法一：根据数据库框架的类型判断。</p><p>常见数据库类型：</p><p>ASP+Access</p><p>PHP+Mysql</p><p>Python+Mysql&#x2F;mongoDb</p><p>JSP+Oracle</p><p>方法二：根据数据库开放端口，进行端口扫描。</p><p>MySql数据库 ，默认端口是: 3306；</p><p>Oracle数据库 ，默认端口号为：1521；</p><p>Sql Server数据库 ，默认端口号为：1433；</p><p>DB2数据库， 默认端口号为：5000；</p><p>PostgreSQL数据库， 默认端口号为：5432；</p><p>国产的DM达梦数据库， 默认端口号为：5236。</p><p>二、NoSql数据库（非关系型数据库）：<br>Redis数据库，默认端口号：6379；</p><p>Memcached数据库，默认端口号：11211 ；</p><p>MongoDB数据库，默认端口号：27017；</p><p>演示案例：数据库弱口令漏洞-docker-compose CVE-2012-2122(Mysql身份认证绕过漏洞)</p><p><a href="https://github.com/shack2/SNETCracker">https://github.com/shack2/SNETCracker</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/09/hello-world/"/>
    <url>/2022/10/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
